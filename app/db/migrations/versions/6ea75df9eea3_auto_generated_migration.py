"""Auto-generated migration

Revision ID: 6ea75df9eea3
Revises: 
Create Date: 2024-10-27 04:36:22.414640

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String, UUID, Boolean, DateTime
import uuid

# revision identifiers, used by Alembic.
revision: str = '6ea75df9eea3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Hospitals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('contactPhone', sa.String(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('lastName', sa.String(), nullable=False),
    sa.Column('firstName', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('tokens', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('EmployeeRoles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('roles_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['roles_id'], ['Roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Rooms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hospitals_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['hospitals_id'], ['Hospitals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Timetable',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('hospital_id', sa.UUID(), nullable=False),
    sa.Column('doctor_id', sa.UUID(), nullable=False),
    sa.Column('from_datetime', sa.DateTime(), nullable=False),
    sa.Column('to_datetime', sa.DateTime(), nullable=False),
    sa.Column('room', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['Users.id'], ),
    sa.ForeignKeyConstraint(['hospital_id'], ['Hospitals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Appointment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('timetable_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['timetable_id'], ['Timetable.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    # Insert initial data
    roles_table = table('Roles',
        column('id', UUID),
        column('Name', String)
    )

    users_table = table('Users',
        column('id', UUID),
        column('lastName', String),
        column('firstName', String),
        column('username', String),
        column('password', String),
        column('tokens', String),
        column('is_deleted', Boolean)
    )

    employee_roles_table = table('EmployeeRoles',
        column('id', UUID),
        column('user_id', UUID),
        column('roles_id', UUID)
    )

    roles_data = [
        {"id": uuid.uuid4(), "Name": "Admin"},
        {"id": uuid.uuid4(), "Name": "Manager"},
        {"id": uuid.uuid4(), "Name": "Doctor"},
        {"id": uuid.uuid4(), "Name": "User"},
    ]

    users_data = [
        {"id": uuid.uuid4(), "lastName": "Admin", "firstName": "Admin", "username": "admin", "password": "admin", "tokens": None, "is_deleted": False},
        {"id": uuid.uuid4(), "lastName": "Manager", "firstName": "Manager", "username": "manager", "password": "manager", "tokens": None, "is_deleted": False},
        {"id": uuid.uuid4(), "lastName": "Doctor", "firstName": "Doctor", "username": "doctor", "password": "doctor", "tokens": None, "is_deleted": False},
        {"id": uuid.uuid4(), "lastName": "User", "firstName": "User", "username": "user", "password": "user", "tokens": None, "is_deleted": False},
    ]

    employee_roles_data = [
        {"id": uuid.uuid4(), "user_id": users_data[0]["id"], "roles_id": roles_data[0]["id"]},
        {"id": uuid.uuid4(), "user_id": users_data[1]["id"], "roles_id": roles_data[1]["id"]},
        {"id": uuid.uuid4(), "user_id": users_data[2]["id"], "roles_id": roles_data[2]["id"]},
        {"id": uuid.uuid4(), "user_id": users_data[3]["id"], "roles_id": roles_data[3]["id"]},
    ]

    op.bulk_insert(roles_table, roles_data)
    op.bulk_insert(users_table, users_data)
    op.bulk_insert(employee_roles_table, employee_roles_data)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Appointment')
    op.drop_table('Timetable')
    op.drop_table('Rooms')
    op.drop_table('EmployeeRoles')
    op.drop_table('Users')
    op.drop_table('Roles')
    op.drop_table('Hospitals')
    # ### end Alembic commands ###